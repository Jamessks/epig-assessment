document.addEventListener("DOMContentLoaded",(function(){const t=document.getElementById("notifications-btn"),e=document.getElementById("notifications-board"),n=document.getElementById("no-notifications-message"),i=document.getElementById("notifications-important");let s=[];t&&e&&(t.addEventListener("click",(function(){t.classList.toggle("outline-none"),t.classList.toggle("ring-2"),t.classList.toggle("ring-white"),t.classList.toggle("ring-offset-2"),t.classList.toggle("ring-offset-gray-800"),e.classList.toggle("hidden")})),e.addEventListener("click",(function(t){if(t.target.classList.contains("notification-close-btn")){const e=t.target.closest(".notification-item"),o=e.getAttribute("data-notification-id");fetch("/api/notifications",{method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify({notificationId:o})}).then((t=>t.json())).then((t=>{t.success?(e.remove(),0===document.querySelector(".notifications-area").children.length&&(n.classList.remove("hidden"),i.classList.add("hidden")),s=[]):console.error("Failed to mark notification as read")})).catch((t=>{console.error("Error:",t)}))}})),setInterval((function(){fetch("/api/notifications").then((t=>t.json())).then((t=>{if(t.count>0){const e=t.notifications;JSON.stringify(e)!==JSON.stringify(s)&&(function(t){const e=document.querySelector(".notifications-area");e.innerHTML="",t.forEach((t=>{const n=document.createElement("div");n.classList.add("notification-item","w-full","max-w-xs","p-4","text-gray-900","bg-white","rounded-lg","shadow","dark:bg-gray-800","dark:text-gray-300","mb-4"),n.setAttribute("data-notification-id",t.id),n.innerHTML=`\n          <div class="flex items-center mb-6">\n              <span class="mb-1 text-sm font-semibold text-gray-900 dark:text-white">${t.message}</span>\n              <button\n                  type="button"\n                  class="notification-close-btn ms-auto -mx-1.5 -my-1.5 bg-white justify-center items-center flex-shrink-0 text-gray-400 hover:text-gray-900 rounded-lg focus:ring-2 focus:ring-gray-300 p-1.5 hover:bg-gray-100 inline-flex h-8 w-8 dark:text-gray-500 dark:hover:text-white dark:bg-gray-800 dark:hover:bg-gray-700"\n                  aria-label="Close">\n                  <span class="sr-only">Close</span>\n                  <svg class="pointer-events-none w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">\n                      <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6" />\n                  </svg>\n              </button>\n          </div>\n          <div class="flex items-center">\n              <div class="ms-3 text-sm font-normal space-y-20">\n                  <span class="text-xs font-medium text-blue-600 dark:text-blue-500">Created at ${t.created_at}</span>\n              </div>\n          </div>\n        `,e.appendChild(n)})),0===t.length?n.classList.remove("hidden"):n.classList.add("hidden")}(e),s=e),i.classList.remove("hidden"),n.classList.add("hidden")}else i.classList.add("hidden"),n.classList.remove("hidden"),s=[]})).catch((t=>console.error("Error fetching notifications:",t)))}),5e3))}));